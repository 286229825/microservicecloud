<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.atguigu.springcloud</groupId>
	<artifactId>microservicecloud</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>


	<properties>
		<!-- 统一编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 统一源代码编译环境为JDK1.8 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<!-- 统一目标编译环境为JDK1.8 -->
		<maven.compiler.target>1.8</maven.compiler.target>
		
		<junit.version>4.12</junit.version>
		<log4j.version>1.2.17</log4j.version>
	</properties>

	<!-- 在父工程中统一通用的依赖，当其子工程需要用到这些依赖的时候就不需要再写版本号了 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.5.9.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.0.4</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.0.31</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.3.0</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.2.3</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<!-- build构建之后生成的文件名，默认为工程的${artifactId}-${version} -->
		<finalName>microservicecloud</finalName>
		<resources>
			<resource>
				<!-- 指定资源文件的路径 -->
				<directory>src/main/resources</directory>
				<!-- 开启资源文件过滤器 -->
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<!-- 资源文件的插件 -->
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<!-- 对于开启了过滤器的资源文件而言，当前插件会将资源文件中以$开头并以$结尾的变量进行解析，转换为相应的常量 -->
					<delimiters>
						<delimit>$</delimit>
					</delimiters>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<modules>
		<module>microservicecloud-api</module>
		<module>microservicecloud-provider-dept-8001</module>
		<module>microservicecloud-consumer-dept-80</module>
		<module>microservicecloud-eureka-7001</module>
		<module>microservicecloud-eureka-7002</module>
		<module>microservicecloud-eureka-7003</module>
		<module>microservicecloud-provider-dept-8002</module>
		<module>microservicecloud-provider-dept-8003</module>
		<module>microservicecloud-consumer-dept-feign</module>
		<module>microservicecloud-provider-dept-hystrix-8001</module>
		<module>microservicecloud-consumer-hystrix-dashboard</module>
		<module>microservicecloud-zuul-gateway-9527</module>
		<module>microservicecloud-config-3344</module>
		<module>microservicecloud-config-client-3355</module>
		<module>microservicecloud-config-eureka-client-7001</module>
		<module>microservicecloud-config-dept-client-8001</module>
	</modules>

</project>

